[project]
name = "openbrokerapi"
version = "4.7.1"
description = "A python package for the V2 CF Service Broker API and Open Broker API (version 2.13+)"
authors = [
    { name = "Maic Siemering", email = "maic@siemering.tech" },
]
license = { text = "MIT" }
readme = "README.rst"
requires-python = ">= 3.8"
keywords = [
    "cloudfoundry",
    "cfbrokerapi",
    "openbrokerapi",
    "openservicebrokerapi",
    "servicebroker",
    "flask",
    "kubernetes",
    "k8s",
]
classifiers = [
    # How mature is this project? Common values are
    #   3 - Alpha
    #   4 - Beta
    #   5 - Production/Stable
    "Development Status :: 5 - Production/Stable",
    # Frameworks
    "Framework :: Flask",
    # Indicate who your project is intended for
    "Intended Audience :: Developers",
    # Pick your license as you wish (should match "license" above)
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    # Specify the Python versions you support here. In particular, ensure
    # that you indicate whether you support Python 2, Python 3 or both.
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
dependencies = [
    "Flask>=3.0.3,<4.0.0",
]

[project.optional-dependencies]
gevent = ["gevent>=22.10.2,<25.0.0"]
gunicorn = ["gunicorn>=20.1,<23.0"]

[dependency-groups]
docs = ["Sphinx>=6.1.3,<8.0.0", "sphinx-rtd-theme>=1.2,<3.0"]
dev = [
    "pytest>=8.2.1",
    "Flask-Testing>=0.8.1",
    "requests>=2.32.2",
    "black>=24.4.2",
    "pre-commit>=3.2.2",
    "bumpversion>=0.6.0",
    "ruff>=0.0.252,<0.4.9",
    "mypy>=1.0.1",
    "types-requests>=2.28.11.15",
]

[project.urls]
"Homepage" = "https://openbrokerapi.readthedocs.io/"
"Documentation" = "https://openbrokerapi.readthedocs.io/"
"Repository" = "https://github.com/eruvanos/openbrokerapi"
"Issue Tracker" = "https://github.com/eruvanos/openbrokerapi/issues"
"Changelog" = "https://github.com/eruvanos/openbrokerapi/blob/main/CHANGELOG.rst"

[tool.black]
line-length = 120
exclude = '''
/(
    \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.coverage.run]
relative_files = true

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"


[tool.ruff]

# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
]

# Same as Black.
line-length = 120

target-version = "py38"

[tool.ruff.lint]

# Enable pycodestyle (`E`) and Pyflakes (`F`) codes by default.
select = [
    "E", # pycodestyle errors
    "W", # pycodestyle warnings
    "F", # pyflakes
    "C", # flake8-comprehensions
    "B", # flake8-bugbear
    # "N",  # naming
    # "S",  # flake8-bandit
    # "PT", # flake8-pytest-style
    # "SIM",# flake8-simplify
    # "TCH",# flake8-type-checking
    # "PL", # Pylint
    "PLE", # error
    "RUF", # Ruff-specific rules
]
ignore = [
    "E501", # line too long, handled by black
    "B008", # do not perform function calls in argument defaults
    "C901", # too complex
    "RUF200", # still using poetry
]

# Allow autofix for all enabled rules (when `--fix`) is provided.
fixable = ["A", "B", "C", "D", "E", "F", "R"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.lint.mccabe]
# Unlike Flake8, default to a complexity level of 10.
max-complexity = 10

[tool.ruff.lint.per-file-ignores]
"doc/conf.py" = ["E402"]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
exclude = [
    '^doc/.*\.py$',
    '^tests/.*\.py$',
]
